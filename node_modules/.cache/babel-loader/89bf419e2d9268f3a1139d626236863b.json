{"ast":null,"code":"var _jsxFileName = \"/home/tharshi/Documents/huex project/comdu.it/src/components/layouts/division.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport Decease from \"../../assets/icons/archive.svg\";\nimport archieve from \"../../assets/icons/archive.svg\";\nimport { isEmpty } from 'lodash';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport Cards from '../core/paper';\n\nconst styles = theme => ({\n  logo: {\n    width: '159px',\n    height: '38px',\n    border: '0',\n    marginBottom: '50px'\n  },\n  title: {\n    textAlign: 'center',\n    font: 'Medium 20px/30px Roboto',\n    letterSpacing: 0,\n    color: '#212529',\n    textTransform: 'capitalize',\n    opacity: ' 1'\n  },\n  head: {\n    textAlign: 'center',\n    font: ' Bold 35px/45px PT Sans',\n    letterSpacing: '0',\n    color: '#212529',\n    opacity: '1'\n  },\n  para: {\n    textAlign: 'center',\n    font: ' Regular 18px/27px PT Sans',\n    letterSpacing: 0,\n    color: '#868E96',\n    opacity: '1',\n    marginTop: '22px'\n  },\n  Header: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: '100%'\n  },\n  data: {\n    justifyContent: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > :nth-child(n+1)': {\n      margin: '16px',\n      hover: 'pointer'\n    }\n  }\n});\n\nclass fullcards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const cards = [{\n        title: 'District population',\n        h6: 'This should be used to tell a story and let your users know more about your service. How can you benefit them?',\n        image: Decease,\n        datasets: '40'\n      }, {\n        title: ' Child care',\n        text: 'This should be used to tell a story and let your users know more about your service. How can you benefit them?',\n        image: Decease,\n        datasets: 15\n      }, {\n        title: 'Decease ',\n        text: 'This should be used to tell a story and let your users know more about your service. How can you benefit them?',\n        image: Decease\n      }];\n      this.setState({\n        cards\n      });\n    };\n\n    this.state = {\n      cards: []\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      cards\n    } = this.state;\n    console.log(cards, '=====================');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.head,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Find insights in the district level\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Datasets organized in district level.\")), !isEmpty(cards) && cards.map(item => {\n      return /*#__PURE__*/React.createElement(Cards, {\n        data: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 14\n        }\n      });\n    })));\n  }\n\n}\n\nexport default withStyles(styles)(fullcards);","map":{"version":3,"sources":["/home/tharshi/Documents/huex project/comdu.it/src/components/layouts/division.js"],"names":["React","Component","withStyles","isEmpty","Grid","Paper","Typography","Chip","Cards","styles","theme","logo","width","height","border","marginBottom","title","textAlign","font","letterSpacing","color","textTransform","opacity","head","para","marginTop","Header","display","justifyContent","alignItems","flexDirection","data","flexWrap","margin","hover","fullcards","constructor","props","componentDidMount","cards","h6","image","Decease","datasets","text","setState","state","render","classes","console","log","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport Decease from '../../assets/icons/archive.svg';\nimport archieve from '../../assets/icons/archive.svg';\nimport { isEmpty } from 'lodash';\n\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport Cards from '../core/paper';\n\nconst styles = (theme) => ({\n    logo: {\n        width: '159px',\n        height: '38px',\n        border: '0',\n        marginBottom: '50px',\n    },\n\n    title: {\n        textAlign: 'center',\n        font: 'Medium 20px/30px Roboto',\n        letterSpacing: 0,\n        color: '#212529',\n        textTransform: 'capitalize',\n        opacity: ' 1',\n    },\n    head: {\n        textAlign: 'center',\n        font: ' Bold 35px/45px PT Sans',\n        letterSpacing: '0',\n        color: '#212529',\n        opacity: '1',\n    },\n    para: {\n        textAlign: 'center',\n        font: ' Regular 18px/27px PT Sans',\n        letterSpacing: 0,\n        color: '#868E96',\n        opacity: '1',\n        marginTop: '22px',\n    },\n    Header: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        width: '100%',\n      },\n    data: {\n        justifyContent: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :nth-child(n+1)': {\n            margin: '16px',\n            hover: 'pointer',\n        },\n    },\n});\nclass fullcards extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: [],\n        };\n    }\n\n    componentDidMount = () => {\n        const cards = [\n            {\n                title: 'District population',\n                h6:\n                    'This should be used to tell a story and let your users know more about your service. How can you benefit them?',\n                image: Decease,\n                datasets: '40',\n            },\n            {\n                title: ' Child care',\n                text:\n                    'This should be used to tell a story and let your users know more about your service. How can you benefit them?',\n                image: Decease,\n                datasets: 15,\n            },\n            {\n                title: 'Decease ',\n                text:\n                    'This should be used to tell a story and let your users know more about your service. How can you benefit them?',\n                image: Decease,\n            },\n        ];\n        this.setState({\n            cards,\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { cards } = this.state;\n        console.log(cards, '=====================')\n        return (\n            <div className={classes.data}>\n                        <div className={classes.Header}>\n\n                <Typography className={classes.head}>\n                    Find insights in the district level\n                    </Typography>\n                <div>\n                    <Typography className={classes.para}>\n                        Datasets organized in district level.\n                        </Typography>\n                </div>\n        \n   {!isEmpty(cards) &&\n    cards.map((item) => {\n      return <Cards data={item} />;\n    })}\n          </div >\n          </div>\n        );\n    }\n}\nexport default withStyles(styles)(fullcards);"]},"metadata":{},"sourceType":"module"}